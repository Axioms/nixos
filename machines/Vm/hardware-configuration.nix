# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  inputs,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/profiles/qemu-guest.nix")
  ];
  zramSwap = {
    enable = true;
    memoryMax = 1024 * 1024 * 1024;
  };
  boot.initrd.availableKernelModules = [
    "ahci"
    "xhci_pci"
    "virtio_pci"
    "virtio_scsi"
    "sr_mod"
    "virtio_blk"
  ];
  boot.initrd.kernelModules = [
    "dm-snapshot"
    "cryptd"
  ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];
  boot.kernelParams = [ "microcode.amd_sha_check=off" ];
  fileSystems."/" = {
    device = "/dev/disk/by-uuid/c1b0ff70-ae0b-4cab-8a18-bdeecd719e81";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-fd6c6dfa-57c1-4f9e-a9a8-1ed69705c65b".device =
    "/dev/disk/by-uuid/fd6c6dfa-57c1-4f9e-a9a8-1ed69705c65b";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/F83C-95FF";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  fileSystems."/mnt/data" = {
    device = "/dev/disk/by-uuid/44928553-e177-461a-94be-ec26d4e04b39";
    fsType = "ext4";
  };

  #boot.initrd.luks.devices."luks-256182d5-5485-42a0-9263-d69e34fc2c31".device = "/dev/disk/by-uuid/256182d5-5485-42a0-9263-d69e34fc2c31";

  fileSystems."/mnt/data1" = {
    device = "/dev/disk/by-uuid/166002b0-6bbc-4733-b0c7-b87fa5e5eb30";
    fsType = "ext4";
  };

  #boot.initrd.luks.devices."luks-e84a86f5-86f8-4531-bb10-8c04d9fcb1bb".device = "/dev/disk/by-uuid/e84a86f5-86f8-4531-bb10-8c04d9fcb1bb";

  fileSystems."/mnt/data3" = {
    device = "/dev/disk/by-uuid/5b717600-6d27-4fd9-9afe-6eebe01d62b9";
    fsType = "ext4";
  };

  #boot.initrd.luks.devices."luks-655bf365-5442-455c-ba6e-94e323e85637".device = "/dev/disk/by-uuid/655bf365-5442-455c-ba6e-94e323e85637";

  fileSystems."/mnt/libvirt" = {
    device = "/dev/disk/by-uuid/1dd6b5aa-1d23-47d6-a829-238f7d0236c3";
    fsType = "ext4";
  };

  #boot.initrd.luks.devices."luks-de4b3c96-d6dc-426d-9843-dcea8f48fa36".device = "/dev/disk/by-uuid/de4b3c96-d6dc-426d-9843-dcea8f48fa36";

  age.secrets.Vm-disk-key = {
    owner = "root";
    mode = "400";
    rekeyFile = "${inputs.secrets}/Vm/mykeyfile.key.age";
  };

  swapDevices = [ ];

  environment.etc.crypttab = {
    mode = "0600";
    text = ''
      # <volume-name> <encrypted-device> [key-file] [options]
      luks-256182d5-5485-42a0-9263-d69e34fc2c31 UUID=256182d5-5485-42a0-9263-d69e34fc2c31 ${config.age.secrets.Vm-disk-key.path}
      luks-e84a86f5-86f8-4531-bb10-8c04d9fcb1bb UUID=e84a86f5-86f8-4531-bb10-8c04d9fcb1bb ${config.age.secrets.Vm-disk-key.path}
      luks-655bf365-5442-455c-ba6e-94e323e85637 UUID=655bf365-5442-455c-ba6e-94e323e85637 ${config.age.secrets.Vm-disk-key.path}
      luks-de4b3c96-d6dc-426d-9843-dcea8f48fa36 UUID=de4b3c96-d6dc-426d-9843-dcea8f48fa36 ${config.age.secrets.Vm-disk-key.path}
      # cryptstorage UUID=UUID-OF-SDB ${config.age.secrets.Vm-disk-key.path}
    '';
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  #networking.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
